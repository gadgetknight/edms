2025-05-18 21:39:10,484 - INFO - main.py:118 - Logging configured.
2025-05-18 21:39:10,484 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 21:39:10,484 - INFO - main.py:121 - Initializing database...
2025-05-18 21:39:10,484 - INFO - database_config.py:68 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 21:39:10,492 - INFO - database_config.py:74 - Database engine and session factory created successfully.
2025-05-18 21:39:10,493 - INFO - database_config.py:135 - Database tables created (if they didn't exist).
2025-05-18 21:39:10,495 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 21:39:10,495 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 21:39:10,499 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 21:39:10,540 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 21:39:12,551 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 21:39:20,900 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-18 21:39:20,901 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-18 21:39:20,901 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-18 21:39:20,901 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-18 21:39:20,913 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-18 21:44:07,997 - INFO - main.py:118 - Logging configured.
2025-05-18 21:44:07,997 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 21:44:07,997 - INFO - main.py:121 - Initializing database...
2025-05-18 21:44:07,997 - INFO - database_config.py:68 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 21:44:08,006 - INFO - database_config.py:74 - Database engine and session factory created successfully.
2025-05-18 21:44:08,006 - INFO - database_config.py:135 - Database tables created (if they didn't exist).
2025-05-18 21:44:08,007 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 21:44:08,007 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 21:44:08,011 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 21:44:08,050 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 21:44:09,988 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 21:45:01,871 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-18 21:45:01,871 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-18 21:45:01,872 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-18 21:45:01,872 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-18 21:45:01,884 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-18 21:51:16,397 - INFO - main.py:118 - Logging configured.
2025-05-18 21:51:16,397 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 21:51:16,398 - INFO - main.py:121 - Initializing database...
2025-05-18 21:51:16,398 - INFO - database_config.py:68 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 21:51:16,404 - INFO - database_config.py:74 - Database engine and session factory created successfully.
2025-05-18 21:51:16,405 - INFO - database_config.py:135 - Database tables created (if they didn't exist).
2025-05-18 21:51:16,406 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 21:51:16,406 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 21:51:16,410 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 21:51:16,447 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 21:51:18,070 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 21:51:27,462 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-18 21:51:27,462 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-18 21:51:27,463 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-18 21:51:27,463 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-18 21:51:27,474 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-18 21:51:27,513 - ERROR - horse_controller.py:181 - Error getting locations list: (sqlite3.OperationalError) no such column: locations.description
[SQL: SELECT locations.location_id AS locations_location_id, locations.location_name AS locations_location_name, locations.description AS locations_description, locations.is_active AS locations_is_active, locations.created_date AS locations_created_date, locations.modified_date AS locations_modified_date 
FROM locations 
WHERE locations.is_active = 1 ORDER BY locations.location_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: locations.description

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 178, in get_locations_list
    .all()
     ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2693, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: locations.description
[SQL: SELECT locations.location_id AS locations_location_id, locations.location_name AS locations_location_name, locations.description AS locations_description, locations.is_active AS locations_is_active, locations.created_date AS locations_created_date, locations.modified_date AS locations_modified_date 
FROM locations 
WHERE locations.is_active = 1 ORDER BY locations.location_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 21:51:27,575 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-18 21:51:27,578 - ERROR - horse_controller.py:166 - Error searching horses: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id 
WHERE horses.is_active = 1 ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: horses.species_id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 163, in search_horses
    horses = query.order_by(Horse.horse_name).all()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2693, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id 
WHERE horses.is_active = 1 ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 21:51:27,581 - ERROR - horse_controller.py:166 - Error searching horses: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: horses.species_id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 163, in search_horses
    horses = query.order_by(Horse.horse_name).all()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2693, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 21:51:27,583 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-18 21:51:27,654 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-18 21:51:35,882 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-18 21:51:35,894 - INFO - user_management_screen.py:493 - UserManagementScreen __init__ started by user: TM
2025-05-18 21:52:18,758 - INFO - main.py:118 - Logging configured.
2025-05-18 21:52:18,759 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 21:52:18,759 - INFO - main.py:121 - Initializing database...
2025-05-18 21:52:18,759 - INFO - database_config.py:68 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 21:52:18,766 - INFO - database_config.py:74 - Database engine and session factory created successfully.
2025-05-18 21:52:18,767 - INFO - database_config.py:135 - Database tables created (if they didn't exist).
2025-05-18 21:52:18,767 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 21:52:18,768 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 21:52:18,772 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 21:52:18,810 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 21:52:20,630 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 21:52:29,416 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-18 21:52:29,416 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-18 21:52:29,417 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-18 21:52:29,418 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-18 21:52:29,433 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-18 21:52:29,475 - ERROR - horse_controller.py:181 - Error getting locations list: (sqlite3.OperationalError) no such column: locations.description
[SQL: SELECT locations.location_id AS locations_location_id, locations.location_name AS locations_location_name, locations.description AS locations_description, locations.is_active AS locations_is_active, locations.created_date AS locations_created_date, locations.modified_date AS locations_modified_date 
FROM locations 
WHERE locations.is_active = 1 ORDER BY locations.location_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: locations.description

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 178, in get_locations_list
    .all()
     ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2693, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: locations.description
[SQL: SELECT locations.location_id AS locations_location_id, locations.location_name AS locations_location_name, locations.description AS locations_description, locations.is_active AS locations_is_active, locations.created_date AS locations_created_date, locations.modified_date AS locations_modified_date 
FROM locations 
WHERE locations.is_active = 1 ORDER BY locations.location_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 21:52:29,522 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-18 21:52:29,524 - ERROR - horse_controller.py:166 - Error searching horses: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id 
WHERE horses.is_active = 1 ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: horses.species_id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 163, in search_horses
    horses = query.order_by(Horse.horse_name).all()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2693, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id 
WHERE horses.is_active = 1 ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 21:52:29,527 - ERROR - horse_controller.py:166 - Error searching horses: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: horses.species_id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 163, in search_horses
    horses = query.order_by(Horse.horse_name).all()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2693, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 21:52:29,529 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-18 21:52:29,596 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-18 21:52:37,244 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-18 21:52:37,244 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-18 21:52:37,256 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 21:52:37,257 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 22:04:09,484 - INFO - main.py:118 - Logging configured.
2025-05-18 22:04:09,484 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 22:04:09,484 - INFO - main.py:121 - Initializing database...
2025-05-18 22:04:09,484 - INFO - database_config.py:68 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 22:04:09,491 - INFO - database_config.py:74 - Database engine and session factory created successfully.
2025-05-18 22:04:09,492 - INFO - database_config.py:135 - Database tables created (if they didn't exist).
2025-05-18 22:04:09,492 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 22:04:09,493 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 22:04:09,497 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 22:04:09,534 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 22:04:11,596 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 22:04:20,688 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-18 22:04:20,688 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-18 22:04:20,689 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-18 22:04:20,689 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-18 22:04:20,704 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-18 22:04:20,745 - ERROR - horse_controller.py:181 - Error getting locations list: (sqlite3.OperationalError) no such column: locations.description
[SQL: SELECT locations.location_id AS locations_location_id, locations.location_name AS locations_location_name, locations.description AS locations_description, locations.is_active AS locations_is_active, locations.created_date AS locations_created_date, locations.modified_date AS locations_modified_date 
FROM locations 
WHERE locations.is_active = 1 ORDER BY locations.location_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: locations.description

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 178, in get_locations_list
    .all()
     ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2693, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: locations.description
[SQL: SELECT locations.location_id AS locations_location_id, locations.location_name AS locations_location_name, locations.description AS locations_description, locations.is_active AS locations_is_active, locations.created_date AS locations_created_date, locations.modified_date AS locations_modified_date 
FROM locations 
WHERE locations.is_active = 1 ORDER BY locations.location_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 22:04:20,791 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-18 22:04:20,794 - ERROR - horse_controller.py:166 - Error searching horses: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id 
WHERE horses.is_active = 1 ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: horses.species_id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 163, in search_horses
    horses = query.order_by(Horse.horse_name).all()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2693, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id 
WHERE horses.is_active = 1 ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 22:04:20,796 - ERROR - horse_controller.py:166 - Error searching horses: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: horses.species_id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 163, in search_horses
    horses = query.order_by(Horse.horse_name).all()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2693, in all
    return self._iter().all()  # type: ignore
           ^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: horses.species_id
[SQL: SELECT horses.horse_id AS horses_horse_id, horses.horse_name AS horses_horse_name, horses.account_number AS horses_account_number, horses.species_id AS horses_species_id, horses.breed AS horses_breed, horses.color AS horses_color, horses.sex AS horses_sex, horses.date_of_birth AS horses_date_of_birth, horses.registration_number AS horses_registration_number, horses.microchip_id AS horses_microchip_id, horses.tattoo AS horses_tattoo, horses.brand AS horses_brand, horses.band_tag_number AS horses_band_tag_number, horses.current_location_id AS horses_current_location_id, horses.is_active AS horses_is_active, horses.notes AS horses_notes, horses.created_date AS horses_created_date, horses.modified_date AS horses_modified_date, locations_1.location_id AS locations_1_location_id, locations_1.location_name AS locations_1_location_name, locations_1.description AS locations_1_description, locations_1.is_active AS locations_1_is_active, locations_1.created_date AS locations_1_created_date, locations_1.modified_date AS locations_1_modified_date 
FROM horses LEFT OUTER JOIN locations AS locations_1 ON locations_1.location_id = horses.current_location_id ORDER BY horses.horse_name]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 22:04:20,798 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-18 22:04:20,859 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-18 22:04:25,621 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-18 22:04:25,622 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-18 22:04:25,632 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 22:04:25,633 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 22:05:22,648 - INFO - main.py:118 - Logging configured.
2025-05-18 22:05:22,648 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 22:05:22,649 - INFO - main.py:121 - Initializing database...
2025-05-18 22:05:22,649 - INFO - database_config.py:68 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 22:05:22,656 - INFO - database_config.py:74 - Database engine and session factory created successfully.
2025-05-18 22:05:22,657 - INFO - database_config.py:135 - Database tables created (if they didn't exist).
2025-05-18 22:05:22,657 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 22:05:22,658 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 22:05:22,661 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 22:05:22,699 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 22:05:24,302 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 22:05:39,521 - ERROR - user_controller.py:91 - Error during password validation for user 'ADMIN': (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('ADMIN', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: users

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\user_controller.py", line 49, in validate_password
    user = session.query(User).filter(User.user_id == user_id.upper()).first()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2748, in first
    return self.limit(1)._iter().first()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('ADMIN', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 22:05:39,527 - WARNING - small_login_dialog.py:208 - Login failed for user 'ADMIN': An error occurred during login. Please try again.
2025-05-18 22:05:54,371 - ERROR - user_controller.py:91 - Error during password validation for user 'TM': (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: users

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\user_controller.py", line 49, in validate_password
    user = session.query(User).filter(User.user_id == user_id.upper()).first()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2748, in first
    return self.limit(1)._iter().first()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 22:05:54,372 - WARNING - small_login_dialog.py:208 - Login failed for user 'TM': An error occurred during login. Please try again.
2025-05-18 22:07:01,785 - INFO - main.py:118 - Logging configured.
2025-05-18 22:07:01,786 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 22:07:01,786 - INFO - main.py:121 - Initializing database...
2025-05-18 22:07:01,786 - INFO - database_config.py:68 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 22:07:01,794 - INFO - database_config.py:74 - Database engine and session factory created successfully.
2025-05-18 22:07:01,794 - INFO - database_config.py:135 - Database tables created (if they didn't exist).
2025-05-18 22:07:01,795 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 22:07:01,795 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 22:07:01,800 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 22:07:01,841 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 22:07:03,981 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 22:07:13,960 - ERROR - user_controller.py:91 - Error during password validation for user 'TM': (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: users

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\user_controller.py", line 49, in validate_password
    user = session.query(User).filter(User.user_id == user_id.upper()).first()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2748, in first
    return self.limit(1)._iter().first()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 22:07:13,964 - WARNING - small_login_dialog.py:208 - Login failed for user 'TM': An error occurred during login. Please try again.
2025-05-18 22:07:26,777 - ERROR - user_controller.py:91 - Error during password validation for user 'ADMIN': (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('ADMIN', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: users

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\user_controller.py", line 49, in validate_password
    user = session.query(User).filter(User.user_id == user_id.upper()).first()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2748, in first
    return self.limit(1)._iter().first()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('ADMIN', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 22:07:26,778 - WARNING - small_login_dialog.py:208 - Login failed for user 'ADMIN': An error occurred during login. Please try again.
2025-05-18 22:17:28,810 - INFO - main.py:118 - Logging configured.
2025-05-18 22:17:28,810 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 22:17:28,810 - INFO - main.py:121 - Initializing database...
2025-05-18 22:17:28,811 - INFO - database_config.py:72 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 22:17:28,818 - INFO - database_config.py:80 - Database engine and session factory created successfully.
2025-05-18 22:17:28,818 - INFO - database_config.py:140 - Models known by Base.metadata before create_all: []
2025-05-18 22:17:28,819 - INFO - database_config.py:145 - Database tables created (if they didn't exist).
2025-05-18 22:17:28,819 - INFO - database_config.py:148 - Models known by Base.metadata after create_all: []
2025-05-18 22:17:28,820 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 22:17:28,820 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 22:17:28,824 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 22:17:28,862 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 22:17:30,632 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 22:17:41,020 - ERROR - user_controller.py:91 - Error during password validation for user 'TM': (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such table: users

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\user_controller.py", line 49, in validate_password
    user = session.query(User).filter(User.user_id == user_id.upper()).first()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2748, in first
    return self.limit(1)._iter().first()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: users
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-18 22:17:41,024 - WARNING - small_login_dialog.py:208 - Login failed for user 'TM': An error occurred during login. Please try again.
2025-05-18 22:24:16,029 - INFO - main.py:118 - Logging configured.
2025-05-18 22:24:16,029 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 22:24:16,030 - INFO - main.py:121 - Initializing database...
2025-05-18 22:24:16,030 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 22:24:16,037 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-18 22:24:16,038 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-18 22:24:16,305 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-18 22:24:16,305 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-18 22:24:16,306 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 22:24:16,306 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 22:24:16,311 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 22:24:16,348 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 22:24:20,727 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 22:24:30,134 - WARNING - user_controller.py:51 - User 'TM' not found during password validation.
2025-05-18 22:24:30,134 - WARNING - small_login_dialog.py:208 - Login failed for user 'TM': Invalid User ID or Password.
2025-05-18 22:32:08,060 - INFO - main.py:118 - Logging configured.
2025-05-18 22:32:08,060 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-18 22:32:08,060 - INFO - main.py:121 - Initializing database...
2025-05-18 22:32:08,060 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-18 22:32:08,068 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-18 22:32:08,068 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-18 22:32:08,072 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-18 22:32:08,072 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-18 22:32:08,073 - INFO - main.py:130 - Database initialized successfully.
2025-05-18 22:32:08,073 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-18 22:32:08,078 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-18 22:32:08,123 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-18 22:32:09,909 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-18 22:32:19,570 - INFO - user_controller.py:81 - Password validated successfully for active user 'ADMIN'.
2025-05-18 22:32:19,570 - INFO - small_login_dialog.py:188 - Password validation successful for user 'ADMIN'.
2025-05-18 22:32:19,572 - INFO - small_login_dialog.py:192 - User 'ADMIN' logged in successfully via small dialog.
2025-05-18 22:32:19,572 - INFO - main.py:160 - User 'ADMIN' logged in successfully.
2025-05-18 22:32:19,584 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-18 22:32:19,667 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-18 22:32:19,672 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-18 22:32:19,749 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-18 22:32:24,075 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-18 22:32:24,089 - INFO - user_management_screen.py:493 - UserManagementScreen __init__ started by user: ADMIN
2025-05-19 09:35:13,307 - INFO - main.py:118 - Logging configured.
2025-05-19 09:35:13,308 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 09:35:13,308 - INFO - main.py:121 - Initializing database...
2025-05-19 09:35:13,308 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 09:35:13,323 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 09:35:13,328 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 09:35:13,331 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 09:35:13,331 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 09:35:13,332 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 09:35:13,333 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 09:35:13,345 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 09:35:13,390 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 09:35:54,024 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 09:36:07,715 - INFO - user_controller.py:81 - Password validated successfully for active user 'ADMIN'.
2025-05-19 09:36:07,716 - INFO - small_login_dialog.py:188 - Password validation successful for user 'ADMIN'.
2025-05-19 09:36:07,717 - INFO - small_login_dialog.py:192 - User 'ADMIN' logged in successfully via small dialog.
2025-05-19 09:36:07,717 - INFO - main.py:160 - User 'ADMIN' logged in successfully.
2025-05-19 09:36:07,732 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-19 09:36:08,257 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 09:36:08,262 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 09:36:08,333 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 09:36:14,751 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 09:36:21,706 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 09:36:21,719 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: ADMIN
2025-05-19 09:36:21,763 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 09:36:21,764 - INFO - user_management_screen.py:1108 - Loaded 1 users.
2025-05-19 09:36:21,765 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 09:36:21,766 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 09:36:21,767 - INFO - user_management_screen.py:1125 - No master owners found.
2025-05-19 09:36:21,768 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 09:36:21,769 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 09:36:21,770 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 09:36:21,801 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 09:37:17,738 - INFO - user_management_screen.py:1368 - Add User button clicked.
2025-05-19 09:37:50,218 - INFO - user_controller.py:181 - User 'TM' created successfully.
2025-05-19 09:37:50,218 - INFO - base_view.py:293 - Displaying Info: User Created - User created successfully.
2025-05-19 09:37:52,350 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 09:37:52,351 - INFO - user_management_screen.py:1216 - User selection cleared.
2025-05-19 09:37:52,352 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 09:37:52,352 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 09:37:52,353 - INFO - user_management_screen.py:1202 - User selected: TM
2025-05-19 09:38:08,854 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 09:38:08,867 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-19 09:38:08,939 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 09:38:08,940 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 09:38:08,964 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 09:38:12,494 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 09:44:29,364 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 09:44:29,378 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: ADMIN
2025-05-19 09:44:29,417 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 09:44:29,418 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 09:44:29,419 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 09:44:29,420 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 09:44:29,421 - INFO - user_management_screen.py:1125 - No master owners found.
2025-05-19 09:44:29,421 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 09:44:29,421 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 09:44:29,422 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 09:44:29,447 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 09:45:09,470 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 09:45:09,484 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-19 09:45:09,554 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 09:45:09,556 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 09:45:09,581 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 09:45:17,172 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 09:48:50,641 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 09:48:50,641 - INFO - base_view.py:297 - Asking Question: Unsaved Changes - You have unsaved changes. Discard changes and log out?
2025-05-19 09:48:56,545 - INFO - main.py:210 - User 'ADMIN' logging out from Horse Management.
2025-05-19 09:48:56,564 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 09:48:56,566 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 09:49:10,379 - INFO - main.py:118 - Logging configured.
2025-05-19 09:49:10,379 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 09:49:10,380 - INFO - main.py:121 - Initializing database...
2025-05-19 09:49:10,380 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 09:49:10,387 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 09:49:10,387 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 09:49:10,390 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 09:49:10,390 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 09:49:10,391 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 09:49:10,391 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 09:49:10,396 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 09:49:10,437 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 09:49:14,988 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 09:49:42,501 - WARNING - user_controller.py:58 - Incorrect password attempt for user 'TM'.
2025-05-19 09:49:42,502 - WARNING - small_login_dialog.py:208 - Login failed for user 'TM': Invalid User ID or Password.
2025-05-19 09:50:00,128 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 09:50:00,128 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 09:50:00,129 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 09:50:00,129 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 09:50:00,147 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 09:50:00,330 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 09:50:00,335 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 09:50:00,403 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 09:50:03,109 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 09:50:34,884 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 09:50:34,897 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: TM
2025-05-19 09:50:34,939 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 09:50:34,940 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 09:50:34,941 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 09:50:34,942 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 09:50:34,943 - INFO - user_management_screen.py:1125 - No master owners found.
2025-05-19 09:50:34,944 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 09:50:34,945 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 09:50:34,945 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 09:50:34,975 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 09:50:45,945 - INFO - user_management_screen.py:1486 - Add Master Owner button clicked.
2025-05-19 09:53:41,833 - INFO - owner_controller.py:237 - Master Owner 'Kelly Coile' (ID: 1) created by TM.
2025-05-19 09:53:41,834 - INFO - base_view.py:293 - Displaying Info: Master Owner Created - Owner created successfully.
2025-05-19 09:53:43,416 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 09:53:43,418 - INFO - user_management_screen.py:1152 - Loaded 1 master owners.
2025-05-19 09:53:43,419 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 09:58:40,651 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 09:59:31,213 - INFO - user_management_screen.py:1364 - User Management exit.
2025-05-19 09:59:31,213 - INFO - main.py:217 - User 'TM' logging out from Admin Screen.
2025-05-19 09:59:31,215 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 09:59:31,227 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 09:59:31,229 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 10:21:29,721 - INFO - main.py:118 - Logging configured.
2025-05-19 10:21:29,721 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 10:21:29,722 - INFO - main.py:121 - Initializing database...
2025-05-19 10:21:29,723 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 10:21:29,731 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 10:21:29,731 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 10:21:29,733 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 10:21:29,733 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 10:21:29,734 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 10:21:29,734 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 10:21:29,739 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 10:21:29,781 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 10:21:59,605 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 10:22:07,750 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 10:22:07,750 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 10:22:07,751 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 10:22:07,751 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 10:22:07,764 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 10:22:07,953 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 10:22:07,958 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 10:22:08,030 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 10:22:12,904 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 10:22:55,992 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 10:22:56,003 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: TM
2025-05-19 10:22:56,061 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 10:22:56,062 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 10:22:56,062 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 10:22:56,063 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 10:22:56,065 - INFO - user_management_screen.py:1152 - Loaded 1 master owners.
2025-05-19 10:22:56,065 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 10:22:56,068 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 10:22:56,069 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 10:22:56,069 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 10:22:56,099 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 10:23:02,338 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 10:28:53,305 - INFO - charge_code_controller.py:113 - Charge Code '32' created successfully (ID: 5).
2025-05-19 10:28:55,122 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 10:28:55,123 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 10:29:15,303 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 10:29:17,264 - INFO - charge_code_controller.py:305 - Charge Code 'BOARD' (ID: 3) status changed to inactive.
2025-05-19 10:29:17,265 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'BOARD' status set to inactive.
2025-05-19 10:29:18,799 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 10:29:18,804 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 10:29:21,984 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 10:29:24,421 - INFO - charge_code_controller.py:305 - Charge Code 'EXAM' (ID: 1) status changed to inactive.
2025-05-19 10:29:24,421 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'EXAM' status set to inactive.
2025-05-19 10:29:27,227 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 10:29:27,230 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 10:29:31,626 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 10:29:33,072 - INFO - charge_code_controller.py:305 - Charge Code 'VACC' (ID: 2) status changed to inactive.
2025-05-19 10:29:33,072 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'VACC' status set to inactive.
2025-05-19 10:29:34,680 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 10:29:34,681 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 10:29:37,252 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 10:29:38,641 - INFO - charge_code_controller.py:305 - Charge Code 'FC' (ID: 4) status changed to inactive.
2025-05-19 10:29:38,642 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'FC' status set to inactive.
2025-05-19 10:29:40,654 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 10:29:40,656 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 10:32:06,070 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 10:34:09,508 - INFO - charge_code_controller.py:113 - Charge Code '33' created successfully (ID: 6).
2025-05-19 10:34:11,259 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 10:34:11,260 - INFO - user_management_screen.py:1192 - Loaded 6 charge codes.
2025-05-19 10:34:14,671 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 10:35:58,652 - INFO - charge_code_controller.py:113 - Charge Code '35' created successfully (ID: 7).
2025-05-19 10:36:00,300 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 10:36:00,301 - INFO - user_management_screen.py:1192 - Loaded 7 charge codes.
2025-05-19 10:36:05,950 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 10:37:11,881 - INFO - charge_code_controller.py:113 - Charge Code '31' created successfully (ID: 8).
2025-05-19 10:37:13,558 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 10:37:13,559 - INFO - user_management_screen.py:1192 - Loaded 8 charge codes.
2025-05-19 10:38:14,589 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 10:38:14,603 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 10:38:14,690 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 10:38:14,692 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 10:38:14,717 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 10:39:32,691 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 10:40:47,637 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 10:40:47,637 - INFO - base_view.py:297 - Asking Question: Unsaved Changes - You have unsaved changes. Discard changes and log out?
2025-05-19 10:40:50,816 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 10:40:50,828 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 10:40:50,831 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 10:43:53,765 - INFO - main.py:118 - Logging configured.
2025-05-19 10:43:53,765 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 10:43:53,766 - INFO - main.py:121 - Initializing database...
2025-05-19 10:43:53,766 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 10:43:53,773 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 10:43:53,774 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 10:43:53,776 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 10:43:53,776 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 10:43:53,777 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 10:43:53,778 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 10:43:53,782 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 10:43:53,827 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 10:43:56,308 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 10:44:04,890 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 10:44:04,891 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 10:44:04,892 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 10:44:04,892 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 10:44:04,908 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 10:44:05,088 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 10:44:05,093 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 10:44:05,157 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 10:44:07,256 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 10:44:27,002 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-19 10:44:27,002 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-19 10:44:27,004 - ERROR - horse_controller.py:73 - Error creating horse: 'created_by' is an invalid keyword argument for Horse
Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 46, in create_horse
    horse = Horse(
            ^^^^^^
  File "<string>", line 4, in __init__
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state.py", line 566, in _initialize_instance
    with util.safe_reraise():
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state.py", line 564, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2142, in _declarative_constructor
    raise TypeError(
TypeError: 'created_by' is an invalid keyword argument for Horse
2025-05-19 10:44:27,029 - ERROR - base_view.py:285 - Displaying Error: Save Failed - Error creating horse: 'created_by' is an invalid keyword argument for Horse
2025-05-19 10:44:54,746 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 10:44:54,746 - INFO - base_view.py:297 - Asking Question: Unsaved Changes - You have unsaved changes. Discard changes and log out?
2025-05-19 10:44:56,494 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 10:44:56,506 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 10:44:56,509 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 10:46:46,287 - INFO - main.py:118 - Logging configured.
2025-05-19 10:46:46,287 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 10:46:46,288 - INFO - main.py:121 - Initializing database...
2025-05-19 10:46:46,288 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 10:46:46,296 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 10:46:46,296 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 10:46:46,299 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 10:46:46,299 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 10:46:46,300 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 10:46:46,301 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 10:46:46,305 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 10:46:46,352 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 10:46:48,160 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 10:46:56,972 - ERROR - user_controller.py:91 - Error during password validation for user 'TM': (sqlite3.OperationalError) no such column: users.created_by
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date, users.created_by AS users_created_by, users.modified_by AS users_modified_by 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: users.created_by

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\user_controller.py", line 49, in validate_password
    user = session.query(User).filter(User.user_id == user_id.upper()).first()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2748, in first
    return self.limit(1)._iter().first()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: users.created_by
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date, users.created_by AS users_created_by, users.modified_by AS users_modified_by 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-19 10:46:57,035 - WARNING - small_login_dialog.py:208 - Login failed for user 'TM': An error occurred during login. Please try again.
2025-05-19 10:47:08,671 - ERROR - user_controller.py:91 - Error during password validation for user 'TM': (sqlite3.OperationalError) no such column: users.created_by
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date, users.created_by AS users_created_by, users.modified_by AS users_modified_by 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: no such column: users.created_by

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\user_controller.py", line 49, in validate_password
    user = session.query(User).filter(User.user_id == user_id.upper()).first()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2748, in first
    return self.limit(1)._iter().first()  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 2847, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2308, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2190, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: users.created_by
[SQL: SELECT users.user_id AS users_user_id, users.password_hash AS users_password_hash, users.user_name AS users_user_name, users.is_active AS users_is_active, users.last_login AS users_last_login, users.printer_id AS users_printer_id, users.default_screen_colors AS users_default_screen_colors, users.created_date AS users_created_date, users.modified_date AS users_modified_date, users.created_by AS users_created_by, users.modified_by AS users_modified_by 
FROM users 
WHERE users.user_id = ?
 LIMIT ? OFFSET ?]
[parameters: ('TM', 1, 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-05-19 10:47:08,677 - WARNING - small_login_dialog.py:208 - Login failed for user 'TM': An error occurred during login. Please try again.
2025-05-19 10:58:19,033 - INFO - main.py:118 - Logging configured.
2025-05-19 10:58:19,034 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 10:58:19,034 - INFO - main.py:121 - Initializing database...
2025-05-19 10:58:19,035 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 10:58:19,042 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 10:58:19,042 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 10:58:19,046 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 10:58:19,046 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 10:58:19,046 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 10:58:19,046 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 10:58:19,051 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 10:58:19,098 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 10:58:21,620 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 10:58:31,082 - WARNING - user_controller.py:51 - User 'TM' not found during password validation.
2025-05-19 10:58:31,083 - WARNING - small_login_dialog.py:208 - Login failed for user 'TM': Invalid User ID or Password.
2025-05-19 10:58:42,672 - INFO - user_controller.py:81 - Password validated successfully for active user 'ADMIN'.
2025-05-19 10:58:42,673 - INFO - small_login_dialog.py:188 - Password validation successful for user 'ADMIN'.
2025-05-19 10:58:42,674 - INFO - small_login_dialog.py:192 - User 'ADMIN' logged in successfully via small dialog.
2025-05-19 10:58:42,675 - INFO - main.py:160 - User 'ADMIN' logged in successfully.
2025-05-19 10:58:42,691 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-19 10:58:42,875 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 10:58:42,879 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 10:58:42,947 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 10:58:47,295 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 10:59:02,838 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-19 10:59:02,838 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-19 10:59:02,846 - INFO - horse_controller.py:66 - Created new horse: Soul Rebel (ID: 1)
2025-05-19 10:59:02,846 - INFO - horse_unified_management.py:637 - New horse created with ID: 1
2025-05-19 10:59:02,846 - INFO - base_view.py:293 - Displaying Info: Success - Horse created successfully
2025-05-19 10:59:05,177 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 10:59:05,181 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 10:59:05,182 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 11:00:20,732 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 11:00:20,744 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: ADMIN
2025-05-19 11:00:20,801 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 11:00:20,802 - INFO - user_management_screen.py:1108 - Loaded 1 users.
2025-05-19 11:00:20,803 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 11:00:20,804 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 11:00:20,805 - INFO - user_management_screen.py:1125 - No master owners found.
2025-05-19 11:00:20,805 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 11:00:20,806 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 11:00:20,807 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 11:00:20,839 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 11:00:23,545 - INFO - user_management_screen.py:1368 - Add User button clicked.
2025-05-19 11:00:45,708 - INFO - user_controller.py:181 - User 'TM' created successfully.
2025-05-19 11:00:45,708 - INFO - base_view.py:293 - Displaying Info: User Created - User created successfully.
2025-05-19 11:00:47,263 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 11:00:47,265 - INFO - user_management_screen.py:1216 - User selection cleared.
2025-05-19 11:00:47,265 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 11:00:47,266 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 11:00:47,268 - INFO - user_management_screen.py:1202 - User selected: TM
2025-05-19 11:00:54,542 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 11:00:56,381 - INFO - charge_code_controller.py:305 - Charge Code 'BOARD' (ID: 3) status changed to inactive.
2025-05-19 11:00:56,381 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'BOARD' status set to inactive.
2025-05-19 11:00:59,478 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 11:00:59,482 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 11:01:02,134 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 11:01:03,534 - INFO - charge_code_controller.py:305 - Charge Code 'EXAM' (ID: 1) status changed to inactive.
2025-05-19 11:01:03,534 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'EXAM' status set to inactive.
2025-05-19 11:01:04,342 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 11:01:04,347 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 11:01:06,889 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 11:01:08,342 - INFO - charge_code_controller.py:305 - Charge Code 'VACC' (ID: 2) status changed to inactive.
2025-05-19 11:01:08,342 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'VACC' status set to inactive.
2025-05-19 11:01:09,627 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 11:01:09,631 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 11:01:13,503 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 11:01:15,101 - INFO - charge_code_controller.py:305 - Charge Code 'FC' (ID: 4) status changed to inactive.
2025-05-19 11:01:15,101 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'FC' status set to inactive.
2025-05-19 11:01:16,681 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 11:01:16,685 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 11:01:17,990 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 11:03:26,812 - INFO - charge_code_controller.py:113 - Charge Code '32' created successfully (ID: 5).
2025-05-19 11:03:28,647 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 11:03:28,648 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 11:03:38,143 - INFO - user_management_screen.py:1486 - Add Master Owner button clicked.
2025-05-19 11:06:01,557 - INFO - owner_controller.py:237 - Master Owner 'Kelly Coile' (ID: 1) created by ADMIN.
2025-05-19 11:06:01,558 - INFO - base_view.py:293 - Displaying Info: Master Owner Created - Owner created successfully.
2025-05-19 11:06:03,011 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 11:06:03,012 - INFO - user_management_screen.py:1152 - Loaded 1 master owners.
2025-05-19 11:06:03,013 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 11:06:06,139 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 11:06:06,154 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-19 11:06:06,226 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 11:06:06,228 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 11:06:06,229 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 11:06:06,232 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 11:06:06,263 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 11:06:37,908 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 11:06:37,908 - INFO - main.py:210 - User 'ADMIN' logging out from Horse Management.
2025-05-19 11:06:37,921 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 11:06:37,923 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 11:08:08,622 - INFO - main.py:118 - Logging configured.
2025-05-19 11:08:08,622 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 11:08:08,623 - INFO - main.py:121 - Initializing database...
2025-05-19 11:08:08,623 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 11:08:08,630 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 11:08:08,630 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 11:08:08,633 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 11:08:08,633 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 11:08:08,634 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 11:08:08,634 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 11:08:08,638 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 11:08:08,689 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 11:08:15,888 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 11:08:23,878 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 11:08:23,878 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 11:08:23,879 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 11:08:23,880 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 11:08:23,897 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 11:08:24,045 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 11:08:24,052 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 11:08:24,052 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 11:08:24,061 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 11:08:24,136 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 11:15:58,140 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 11:15:58,140 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 11:15:58,151 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 11:15:58,153 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 11:17:04,924 - INFO - main.py:118 - Logging configured.
2025-05-19 11:17:04,925 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 11:17:04,925 - INFO - main.py:121 - Initializing database...
2025-05-19 11:17:04,926 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 11:17:04,932 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 11:17:04,933 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 11:17:04,935 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 11:17:04,936 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 11:17:04,936 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 11:17:04,937 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 11:17:04,941 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 11:17:04,986 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 11:18:55,317 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 11:19:04,573 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 11:19:04,573 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 11:19:04,574 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 11:19:04,575 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 11:19:04,590 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 11:19:04,762 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 11:19:04,769 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 11:19:04,769 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 11:19:04,778 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 11:19:04,842 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 11:19:10,607 - INFO - link_existing_owner_dialog.py:321 - Owner selected from search: ID 1, Display: Kelly Coile [000945]
2025-05-19 11:19:12,109 - INFO - owners_tab.py:302 - Attempting to link existing owner ID 1 with 100.0% to horse ID 1
2025-05-19 11:19:12,118 - INFO - horse_controller.py:404 - Added owner ID 1 to horse ID 1 with 100.00% ownership by TM.
2025-05-19 11:19:12,118 - INFO - base_view.py:293 - Displaying Info: Owner Linked - Owner added to horse successfully.
2025-05-19 11:19:19,852 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 11:19:19,865 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: TM
2025-05-19 11:19:19,907 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 11:19:19,908 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 11:19:19,909 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 11:19:19,910 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 11:19:19,910 - INFO - user_management_screen.py:1152 - Loaded 1 master owners.
2025-05-19 11:19:19,911 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 11:19:19,914 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 11:19:19,916 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 11:19:19,917 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 11:19:19,949 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 11:19:39,930 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 11:19:39,945 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 11:19:40,019 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 11:19:40,021 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 11:19:40,021 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 11:19:40,024 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 11:19:40,056 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 11:19:42,845 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 11:21:06,507 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-19 11:21:06,508 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-19 11:21:06,510 - ERROR - horse_controller.py:73 - Error creating horse: (sqlite3.IntegrityError) UNIQUE constraint failed: horses.microchip_id
[SQL: INSERT INTO horses (horse_name, account_number, species_id, breed, color, sex, date_of_birth, registration_number, microchip_id, tattoo, brand, band_tag_number, current_location_id, is_active, notes, created_date, modified_date, created_by, modified_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('Donatello', '011884', None, '', '', None, '2025-05-19', '', '', '', '', '', None, 1, None, '2025-05-19 15:21:06.510066', '2025-05-19 15:21:06.510066', 'TM', 'TM')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlite3.IntegrityError: UNIQUE constraint failed: horses.microchip_id

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\horse_controller.py", line 64, in create_horse
    session.commit()
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 1969, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 1256, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 1231, in _prepare_impl
    self.session.flush()
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4312, in flush
    self._flush(objects)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4447, in _flush
    with util.safe_reraise():
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4408, in _flush
    flush_context.execute()
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1226, in _emit_insert_statements
    result = connection.execute(
             ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1416, in execute
    return meth(
           ^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 516, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1639, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1848, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1988, in _exec_single_context
    self._handle_dbapi_exception(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2343, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1969, in _exec_single_context
    self.dialect.do_execute(
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 922, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: horses.microchip_id
[SQL: INSERT INTO horses (horse_name, account_number, species_id, breed, color, sex, date_of_birth, registration_number, microchip_id, tattoo, brand, band_tag_number, current_location_id, is_active, notes, created_date, modified_date, created_by, modified_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('Donatello', '011884', None, '', '', None, '2025-05-19', '', '', '', '', '', None, 1, None, '2025-05-19 15:21:06.510066', '2025-05-19 15:21:06.510066', 'TM', 'TM')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-05-19 11:21:06,539 - ERROR - base_view.py:285 - Displaying Error: Save Failed - Error creating horse: (sqlite3.IntegrityError) UNIQUE constraint failed: horses.microchip_id
[SQL: INSERT INTO horses (horse_name, account_number, species_id, breed, color, sex, date_of_birth, registration_number, microchip_id, tattoo, brand, band_tag_number, current_location_id, is_active, notes, created_date, modified_date, created_by, modified_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('Donatello', '011884', None, '', '', None, '2025-05-19', '', '', '', '', '', None, 1, None, '2025-05-19 15:21:06.510066', '2025-05-19 15:21:06.510066', 'TM', 'TM')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-05-19 11:37:07,948 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 11:37:07,949 - INFO - base_view.py:297 - Asking Question: Unsaved Changes - You have unsaved changes. Discard changes and log out?
2025-05-19 11:37:09,559 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 11:37:09,579 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 11:37:09,582 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 11:38:54,502 - INFO - main.py:118 - Logging configured.
2025-05-19 11:38:54,502 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 11:38:54,503 - INFO - main.py:121 - Initializing database...
2025-05-19 11:38:54,503 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 11:38:54,511 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 11:38:54,511 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 11:38:54,514 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 11:38:54,514 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 11:38:54,515 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 11:38:54,516 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 11:38:54,520 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 11:38:54,573 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 11:38:57,494 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 11:39:07,372 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 11:39:07,372 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 11:39:07,373 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 11:39:07,373 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 11:39:07,385 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 11:39:07,563 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 11:39:07,571 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 11:39:07,571 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 11:39:07,582 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 11:39:07,646 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 11:39:12,711 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 11:40:52,083 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-19 11:40:52,084 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-19 11:40:52,091 - INFO - horse_controller.py:121 - Created new horse: Donatello (ID: 2)
2025-05-19 11:40:52,091 - INFO - horse_unified_management.py:637 - New horse created with ID: 2
2025-05-19 11:40:52,092 - INFO - base_view.py:293 - Displaying Info: Success - Horse created successfully
2025-05-19 11:40:54,293 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 11:40:54,297 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 11:40:54,297 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 11:41:20,698 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 11:41:20,698 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 11:41:20,709 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 11:41:20,712 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 11:53:12,667 - INFO - main.py:118 - Logging configured.
2025-05-19 11:53:12,668 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 11:53:12,668 - INFO - main.py:121 - Initializing database...
2025-05-19 11:53:12,669 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 11:53:12,676 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 11:53:12,676 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 11:53:12,679 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 11:53:12,679 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 11:53:12,680 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 11:53:12,681 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 11:53:12,685 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 11:53:12,731 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 11:53:17,980 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 11:53:28,966 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 11:53:28,967 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 11:53:28,968 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 11:53:28,968 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 11:53:28,984 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 11:53:29,161 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 11:53:29,170 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 11:53:29,170 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 11:53:29,182 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 11:53:29,258 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 11:56:48,680 - INFO - owners_tab.py:274 - Create and link owner dialog cancelled or no valid data returned.
2025-05-19 11:56:57,168 - INFO - owners_tab.py:322 - Link existing owner dialog cancelled by user (rejected).
2025-05-19 11:58:03,487 - INFO - owners_tab.py:274 - Create and link owner dialog cancelled or no valid data returned.
2025-05-19 11:58:11,812 - INFO - owners_tab.py:278 - Create and link owner dialog cancelled by user (rejected).
2025-05-19 12:01:31,744 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 12:01:31,744 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 12:01:31,771 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 12:01:31,775 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 12:01:43,515 - INFO - main.py:118 - Logging configured.
2025-05-19 12:01:43,515 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 12:01:43,516 - INFO - main.py:121 - Initializing database...
2025-05-19 12:01:43,516 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 12:01:43,524 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 12:01:43,524 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 12:01:43,528 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 12:01:43,528 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 12:01:43,529 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 12:01:43,529 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 12:01:43,534 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 12:01:43,580 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 12:01:45,696 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 12:01:53,851 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 12:01:53,851 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 12:01:53,853 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 12:01:53,853 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 12:01:53,863 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 12:01:53,950 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 12:01:53,959 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 12:01:53,959 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 12:01:53,970 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 12:01:54,042 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 12:02:05,161 - INFO - owners_tab.py:322 - Link existing owner dialog cancelled by user (rejected).
2025-05-19 12:03:33,672 - INFO - owners_tab.py:274 - Create and link owner dialog cancelled or no valid data returned.
2025-05-19 12:06:11,566 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 12:06:11,566 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 12:06:11,591 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 12:06:11,594 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 12:06:36,980 - INFO - main.py:118 - Logging configured.
2025-05-19 12:06:36,980 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 12:06:36,982 - INFO - main.py:121 - Initializing database...
2025-05-19 12:06:36,982 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 12:06:36,989 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 12:06:36,990 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 12:06:36,993 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 12:06:36,993 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 12:06:36,994 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 12:06:36,994 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 12:06:36,999 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 12:06:37,046 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 12:07:14,436 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 12:07:22,703 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 12:07:22,703 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 12:07:22,704 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 12:07:22,705 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 12:07:22,724 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 12:07:22,813 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 12:07:22,822 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 12:07:22,823 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 12:07:22,833 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 12:07:22,900 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 12:08:40,136 - INFO - owners_tab.py:274 - Create and link owner dialog cancelled or no valid data returned.
2025-05-19 12:08:54,127 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 12:08:54,141 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: TM
2025-05-19 12:08:54,185 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 12:08:54,186 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 12:08:54,187 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 12:08:54,187 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 12:08:54,188 - INFO - user_management_screen.py:1152 - Loaded 1 master owners.
2025-05-19 12:08:54,189 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 12:08:54,192 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 12:08:54,193 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 12:08:54,193 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 12:08:54,228 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 12:08:58,404 - INFO - user_management_screen.py:1486 - Add Master Owner button clicked.
2025-05-19 12:09:34,380 - INFO - owner_controller.py:237 - Master Owner 'liz gghgf' (ID: 2) created by TM.
2025-05-19 12:09:34,380 - INFO - base_view.py:293 - Displaying Info: Master Owner Created - Owner created successfully.
2025-05-19 12:09:36,098 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 12:09:36,100 - INFO - user_management_screen.py:1243 - Master owner selection cleared.
2025-05-19 12:09:36,100 - INFO - user_management_screen.py:1152 - Loaded 2 master owners.
2025-05-19 12:09:36,101 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 12:09:36,103 - INFO - user_management_screen.py:1225 - Master owner selected: ID 2
2025-05-19 12:09:39,929 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 12:09:39,943 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 12:09:40,020 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 12:09:40,024 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 12:09:40,024 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 12:09:40,027 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 12:09:40,055 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 12:09:43,570 - INFO - link_existing_owner_dialog.py:321 - Owner selected from search: ID 2, Display: liz gghgf [011884]
2025-05-19 12:09:44,858 - INFO - owners_tab.py:302 - Attempting to link existing owner ID 2 with 100.0% to horse ID 2
2025-05-19 12:09:44,865 - INFO - horse_controller.py:621 - Added owner ID 2 to horse ID 2 with 100.00% ownership by TM.
2025-05-19 12:09:44,865 - INFO - base_view.py:293 - Displaying Info: Owner Linked - Owner added to horse successfully.
2025-05-19 12:11:05,300 - INFO - owners_tab.py:209 - Horse-owner association selected: Owner ID 2
2025-05-19 12:11:21,147 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 12:11:21,160 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: TM
2025-05-19 12:11:21,222 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 12:11:21,222 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 12:11:21,223 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 12:11:21,225 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 12:11:21,225 - INFO - user_management_screen.py:1152 - Loaded 2 master owners.
2025-05-19 12:11:21,226 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 12:11:21,228 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 12:11:21,229 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 12:11:21,229 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 12:11:21,267 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 12:11:25,977 - INFO - user_management_screen.py:1225 - Master owner selected: ID 2
2025-05-19 12:11:42,844 - INFO - user_management_screen.py:1515 - Delete Master Owner button clicked.
2025-05-19 12:11:42,844 - INFO - base_view.py:297 - Asking Question: Confirm Permanent Deletion - Are you sure you want to permanently delete owner 'liz gghgf' (ID: 2)?

This action cannot be undone and will remove the owner from the system entirely.
2025-05-19 12:11:44,516 - INFO - user_management_screen.py:1551 - User confirmed permanent deletion for master owner ID: 2
2025-05-19 12:11:44,518 - WARNING - owner_controller.py:347 - Attempt to delete owner ID 2 who is linked to 1 horse(s).
2025-05-19 12:11:44,518 - ERROR - base_view.py:285 - Displaying Error: Deletion Failed - Cannot delete owner. They are currently linked to 1 horse(s). Please unlink them from all horses first.
2025-05-19 12:11:50,039 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 12:11:50,053 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 12:11:50,142 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 12:11:50,146 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 12:11:50,146 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 12:11:50,149 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 12:11:50,183 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 12:11:53,210 - INFO - owners_tab.py:209 - Horse-owner association selected: Owner ID 2
2025-05-19 12:11:54,228 - INFO - base_view.py:297 - Asking Question: Confirm Removal - Are you sure you want to remove owner 'liz gghgf [Acct: 011884]' from horse 'Donatello'?
2025-05-19 12:11:55,836 - INFO - owners_tab.py:349 - Attempting to remove owner ID 2 from horse ID 2
2025-05-19 12:11:55,840 - INFO - horse_controller.py:726 - Removed owner ID 2 from horse ID 2 by TM.
2025-05-19 12:11:55,841 - INFO - base_view.py:293 - Displaying Info: Owner Removed - Owner removed from horse successfully.
2025-05-19 12:11:57,208 - INFO - owners_tab.py:231 - Horse-owner association selection cleared.
2025-05-19 12:12:00,207 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 12:12:00,220 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: TM
2025-05-19 12:12:00,275 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 12:12:00,276 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 12:12:00,277 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 12:12:00,279 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 12:12:00,279 - INFO - user_management_screen.py:1152 - Loaded 2 master owners.
2025-05-19 12:12:00,280 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 12:12:00,282 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 12:12:00,283 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 12:12:00,284 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 12:12:00,321 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 12:12:03,221 - INFO - user_management_screen.py:1225 - Master owner selected: ID 2
2025-05-19 12:12:04,441 - INFO - user_management_screen.py:1515 - Delete Master Owner button clicked.
2025-05-19 12:12:04,441 - INFO - base_view.py:297 - Asking Question: Confirm Permanent Deletion - Are you sure you want to permanently delete owner 'liz gghgf' (ID: 2)?

This action cannot be undone and will remove the owner from the system entirely.
2025-05-19 12:12:06,369 - INFO - user_management_screen.py:1551 - User confirmed permanent deletion for master owner ID: 2
2025-05-19 12:12:06,382 - INFO - owner_controller.py:366 - Master Owner 'gghgf liz' (ID: 2) permanently deleted by admin 'TM'.
2025-05-19 12:12:06,382 - INFO - base_view.py:293 - Displaying Info: Owner Deleted - Owner 'gghgf liz' deleted successfully.
2025-05-19 12:12:07,785 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 12:12:07,786 - INFO - user_management_screen.py:1225 - Master owner selected: ID 2
2025-05-19 12:12:07,787 - ERROR - user_management_screen.py:1235 - Could not fetch master owner ID: 2
2025-05-19 12:12:07,788 - INFO - user_management_screen.py:1243 - Master owner selection cleared.
2025-05-19 12:12:07,788 - INFO - user_management_screen.py:1152 - Loaded 1 master owners.
2025-05-19 12:12:07,789 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 12:13:37,237 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 12:13:37,252 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 12:13:37,341 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 12:13:37,344 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 12:13:37,344 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 12:13:37,347 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 12:13:37,381 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 12:13:39,352 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 12:13:39,353 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 12:13:39,365 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 12:13:39,367 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 12:27:04,514 - INFO - main.py:118 - Logging configured.
2025-05-19 12:27:04,514 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 12:27:04,515 - INFO - main.py:121 - Initializing database...
2025-05-19 12:27:04,515 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 12:27:04,523 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 12:27:04,523 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 12:27:04,526 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 12:27:04,526 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 12:27:04,527 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 12:27:04,528 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 12:27:04,532 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 12:27:04,576 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 12:27:07,874 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 12:27:16,029 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 12:27:16,030 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 12:27:16,031 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 12:27:16,031 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 12:27:16,044 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 12:27:16,224 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 12:27:16,232 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 12:27:16,232 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 12:27:16,242 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 12:27:16,314 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 12:27:21,576 - INFO - owners_tab.py:300 - Initiating Create & Link Owner for horse: Donatello
2025-05-19 12:28:43,208 - INFO - owners_tab.py:327 - Dialog accepted. Owner details: {'account_number': '', 'farm_name': '', 'first_name': 'liz', 'last_name': 'vizz', 'address_line1': '4 marquette rd', 'address_line2': '', 'city': 'medford', 'state_code': 'NY', 'zip_code': '09876', 'country_name': '', 'phone': '', 'email': '', 'is_active': True}, Percentage: 100.0
2025-05-19 12:28:43,216 - INFO - owner_controller.py:237 - Master Owner 'liz vizz' (ID: 2) created by TM.
2025-05-19 12:28:43,216 - INFO - owners_tab.py:342 - Newly created owner ID 2, now linking to horse ID 2
2025-05-19 12:28:43,223 - INFO - horse_controller.py:621 - Added owner ID 2 to horse ID 2 with 100.00% ownership by TM.
2025-05-19 12:28:43,223 - INFO - base_view.py:293 - Displaying Info: Owner Linked - Owner added to horse successfully.
2025-05-19 12:29:06,439 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 12:29:06,440 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 12:29:06,452 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 12:29:06,455 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 12:32:45,869 - INFO - main.py:118 - Logging configured.
2025-05-19 12:32:45,870 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 12:32:45,870 - INFO - main.py:121 - Initializing database...
2025-05-19 12:32:45,870 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 12:32:45,877 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 12:32:45,878 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 12:32:45,881 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 12:32:45,882 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 12:32:45,882 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 12:32:45,883 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 12:32:45,887 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 12:32:45,935 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 12:32:48,169 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 12:32:55,965 - WARNING - user_controller.py:51 - User 'TM' not found during password validation.
2025-05-19 12:32:55,966 - WARNING - small_login_dialog.py:208 - Login failed for user 'TM': Invalid User ID or Password.
2025-05-19 12:33:07,920 - INFO - user_controller.py:81 - Password validated successfully for active user 'ADMIN'.
2025-05-19 12:33:07,920 - INFO - small_login_dialog.py:188 - Password validation successful for user 'ADMIN'.
2025-05-19 12:33:07,921 - INFO - small_login_dialog.py:192 - User 'ADMIN' logged in successfully via small dialog.
2025-05-19 12:33:07,922 - INFO - main.py:160 - User 'ADMIN' logged in successfully.
2025-05-19 12:33:07,938 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-19 12:33:08,116 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 12:33:08,122 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 12:33:08,191 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 12:33:21,645 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 12:33:21,658 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: ADMIN
2025-05-19 12:33:21,710 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 12:33:21,711 - INFO - user_management_screen.py:1108 - Loaded 1 users.
2025-05-19 12:33:21,714 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 12:33:21,714 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 12:33:21,717 - INFO - user_management_screen.py:1125 - No master owners found.
2025-05-19 12:33:21,718 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 12:33:21,718 - INFO - user_management_screen.py:1192 - Loaded 4 charge codes.
2025-05-19 12:33:21,719 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 12:33:21,752 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 12:33:39,772 - INFO - user_management_screen.py:1368 - Add User button clicked.
2025-05-19 12:33:58,717 - INFO - user_controller.py:181 - User 'TM' created successfully.
2025-05-19 12:33:58,717 - INFO - base_view.py:293 - Displaying Info: User Created - User created successfully.
2025-05-19 12:34:00,255 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 12:34:00,256 - INFO - user_management_screen.py:1216 - User selection cleared.
2025-05-19 12:34:00,257 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 12:34:00,257 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 12:34:00,258 - INFO - user_management_screen.py:1202 - User selected: TM
2025-05-19 12:34:09,477 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 12:36:16,171 - INFO - charge_code_controller.py:113 - Charge Code '9991' created successfully (ID: 5).
2025-05-19 12:36:18,028 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 12:36:18,029 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 12:36:21,931 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 12:36:24,194 - INFO - charge_code_controller.py:305 - Charge Code 'FC' (ID: 4) status changed to inactive.
2025-05-19 12:36:24,195 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'FC' status set to inactive.
2025-05-19 12:36:25,848 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 12:36:25,852 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 12:36:27,887 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 12:36:29,420 - INFO - charge_code_controller.py:305 - Charge Code 'BOARD' (ID: 3) status changed to inactive.
2025-05-19 12:36:29,421 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'BOARD' status set to inactive.
2025-05-19 12:36:30,321 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 12:36:30,325 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 12:36:33,721 - INFO - user_management_screen.py:1685 - Toggle Charge Code Active button clicked.
2025-05-19 12:36:35,312 - INFO - charge_code_controller.py:305 - Charge Code 'EXAM' (ID: 1) status changed to inactive.
2025-05-19 12:36:35,312 - INFO - base_view.py:293 - Displaying Info: Status Updated - Charge code 'EXAM' status set to inactive.
2025-05-19 12:36:36,687 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 12:36:36,690 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 12:58:09,255 - INFO - user_management_screen.py:1486 - Add Master Owner button clicked.
2025-05-19 12:58:17,391 - INFO - user_management_screen.py:1512 - Add Master Owner dialog cancelled.
2025-05-19 12:58:25,527 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 15:06:04,757 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 15:06:04,772 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-19 15:06:04,860 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 15:06:04,862 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 15:06:04,895 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 15:06:07,836 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 15:06:33,547 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-19 15:06:33,547 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-19 15:06:33,554 - INFO - horse_controller.py:121 - Created new horse: Soul Rebel (ID: 1)
2025-05-19 15:06:33,554 - INFO - horse_unified_management.py:637 - New horse created with ID: 1
2025-05-19 15:06:33,555 - INFO - base_view.py:293 - Displaying Info: Success - Horse created successfully
2025-05-19 15:06:35,080 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 15:06:35,086 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 15:06:35,086 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 15:06:37,392 - INFO - owners_tab.py:392 - Initiating Link Existing Owner for horse: Soul Rebel
2025-05-19 15:06:39,841 - INFO - owners_tab.py:431 - Link existing owner dialog cancelled by user (rejected).
2025-05-19 15:07:10,752 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 15:07:10,752 - INFO - main.py:210 - User 'ADMIN' logging out from Horse Management.
2025-05-19 15:07:10,764 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 15:07:10,767 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 15:49:55,836 - INFO - main.py:118 - Logging configured.
2025-05-19 15:49:55,836 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 15:49:55,837 - INFO - main.py:121 - Initializing database...
2025-05-19 15:49:55,837 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 15:49:55,852 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 15:49:55,852 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 15:49:55,855 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 15:49:55,856 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 15:49:55,856 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 15:49:55,856 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 15:49:55,867 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 15:49:55,890 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 15:49:58,302 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 15:50:07,587 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 15:50:07,587 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 15:50:07,588 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 15:50:07,588 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 15:50:07,602 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 15:50:08,753 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 15:50:08,762 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 15:50:08,762 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 15:50:08,788 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 15:50:08,844 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 15:50:28,603 - INFO - main.py:118 - Logging configured.
2025-05-19 15:50:28,603 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 15:50:28,604 - INFO - main.py:121 - Initializing database...
2025-05-19 15:50:28,604 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 15:50:28,610 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 15:50:28,610 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 15:50:28,613 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 15:50:28,614 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 15:50:28,614 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 15:50:28,614 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 15:50:28,618 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 15:50:28,640 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 15:50:30,078 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 15:50:41,520 - INFO - user_controller.py:81 - Password validated successfully for active user 'ADMIN'.
2025-05-19 15:50:41,520 - INFO - small_login_dialog.py:188 - Password validation successful for user 'ADMIN'.
2025-05-19 15:50:41,521 - INFO - small_login_dialog.py:192 - User 'ADMIN' logged in successfully via small dialog.
2025-05-19 15:50:41,521 - INFO - main.py:160 - User 'ADMIN' logged in successfully.
2025-05-19 15:50:41,533 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-19 15:50:41,745 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 15:50:41,753 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 15:50:41,753 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 15:50:41,763 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 15:50:41,814 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 15:50:46,337 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 15:50:46,349 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: ADMIN
2025-05-19 15:50:46,394 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 15:50:46,395 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 15:50:46,395 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 15:50:46,396 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 15:50:46,397 - INFO - user_management_screen.py:1125 - No master owners found.
2025-05-19 15:50:46,397 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 15:50:46,399 - INFO - user_management_screen.py:1192 - Loaded 5 charge codes.
2025-05-19 15:50:46,400 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 15:50:46,415 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 17:57:00,845 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 18:56:31,928 - INFO - charge_code_controller.py:113 - Charge Code '413' created successfully (ID: 6).
2025-05-19 18:56:33,618 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 18:56:33,619 - INFO - user_management_screen.py:1192 - Loaded 6 charge codes.
2025-05-19 18:56:42,811 - INFO - user_management_screen.py:1632 - Add Charge Code button clicked.
2025-05-19 18:59:02,199 - INFO - charge_code_controller.py:113 - Charge Code '412' created successfully (ID: 7).
2025-05-19 18:59:03,767 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 18:59:03,768 - INFO - user_management_screen.py:1192 - Loaded 7 charge codes.
2025-05-19 19:06:13,585 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 19:06:13,611 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-19 19:06:13,690 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 19:06:13,692 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 19:06:13,692 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 19:06:13,696 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 19:06:13,712 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 19:06:21,308 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 19:06:40,138 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-19 19:06:40,138 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-19 19:06:40,144 - INFO - horse_controller.py:121 - Created new horse: Donatello (ID: 2)
2025-05-19 19:06:40,145 - INFO - horse_unified_management.py:637 - New horse created with ID: 2
2025-05-19 19:06:40,145 - INFO - base_view.py:293 - Displaying Info: Success - Horse created successfully
2025-05-19 19:06:41,779 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 19:06:41,782 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 19:06:41,782 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 19:06:45,437 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-19 19:07:03,290 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-19 19:07:03,291 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-19 19:07:03,296 - INFO - horse_controller.py:121 - Created new horse: Lorena 90 (ID: 3)
2025-05-19 19:07:03,296 - INFO - horse_unified_management.py:637 - New horse created with ID: 3
2025-05-19 19:07:03,297 - INFO - base_view.py:293 - Displaying Info: Success - Horse created successfully
2025-05-19 19:07:04,847 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 19:07:04,848 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 19:07:04,848 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 19:07:04,851 - INFO - horse_unified_management.py:806 - Horse selection cleared.
2025-05-19 19:07:04,855 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 19:07:04,856 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 19:07:04,858 - INFO - horse_unified_management.py:803 - Horse selected: ID 3
2025-05-19 19:07:04,858 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 3
2025-05-19 19:07:06,670 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 19:07:06,670 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 19:08:27,842 - INFO - owners_tab.py:300 - Initiating Create & Link Owner for horse: Donatello
2025-05-19 19:09:56,171 - INFO - owners_tab.py:327 - Dialog accepted. Owner details: {'account_number': '003255', 'farm_name': '', 'first_name': 'Elizabeth $ Jerald', 'last_name': 'Vizzone', 'address_line1': '4 Marquette Road', 'address_line2': '', 'city': 'Upper Montclair', 'state_code': 'NJ', 'zip_code': '07043', 'country_name': 'USA', 'phone': '', 'email': '', 'is_active': True}, Percentage: 100.0
2025-05-19 19:09:56,177 - INFO - owner_controller.py:237 - Master Owner 'Elizabeth $ Jerald Vizzone' (ID: 1) created by ADMIN.
2025-05-19 19:09:56,177 - INFO - owners_tab.py:342 - Newly created owner ID 1, now linking to horse ID 2
2025-05-19 19:09:56,184 - INFO - horse_controller.py:621 - Added owner ID 1 to horse ID 2 with 100.00% ownership by ADMIN.
2025-05-19 19:09:56,184 - INFO - base_view.py:293 - Displaying Info: Owner Linked - Owner added to horse successfully.
2025-05-19 19:10:01,071 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 19:10:01,071 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 19:10:06,477 - INFO - owners_tab.py:392 - Initiating Link Existing Owner for horse: Soul Rebel
2025-05-19 19:10:08,562 - INFO - owners_tab.py:431 - Link existing owner dialog cancelled by user (rejected).
2025-05-19 19:10:10,053 - INFO - owners_tab.py:300 - Initiating Create & Link Owner for horse: Soul Rebel
2025-05-19 19:12:14,909 - INFO - owners_tab.py:327 - Dialog accepted. Owner details: {'account_number': '000945', 'farm_name': '', 'first_name': 'Kelly', 'last_name': 'Coile', 'address_line1': '21 Branin Rd.', 'address_line2': '', 'city': 'Medford', 'state_code': 'NJ', 'zip_code': '08055', 'country_name': 'USE', 'phone': '609-923-7874', 'email': '', 'is_active': True}, Percentage: 100.0
2025-05-19 19:12:14,915 - INFO - owner_controller.py:237 - Master Owner 'Kelly Coile' (ID: 2) created by ADMIN.
2025-05-19 19:12:14,915 - INFO - owners_tab.py:342 - Newly created owner ID 2, now linking to horse ID 1
2025-05-19 19:12:14,919 - INFO - horse_controller.py:621 - Added owner ID 2 to horse ID 1 with 100.00% ownership by ADMIN.
2025-05-19 19:12:14,919 - INFO - base_view.py:293 - Displaying Info: Owner Linked - Owner added to horse successfully.
2025-05-19 19:12:20,164 - INFO - horse_unified_management.py:803 - Horse selected: ID 3
2025-05-19 19:12:20,164 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 3
2025-05-19 19:12:21,247 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 19:12:21,247 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 19:12:23,378 - INFO - horse_unified_management.py:803 - Horse selected: ID 3
2025-05-19 19:12:23,379 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 3
2025-05-19 19:12:25,543 - INFO - owners_tab.py:300 - Initiating Create & Link Owner for horse: Lorena 90
2025-05-19 19:15:14,596 - INFO - owners_tab.py:384 - Create and link owner dialog cancelled by user (dialog result was not 'Accepted').
2025-05-19 19:15:51,359 - INFO - owners_tab.py:300 - Initiating Create & Link Owner for horse: Lorena 90
2025-05-19 19:17:47,875 - INFO - owners_tab.py:327 - Dialog accepted. Owner details: {'account_number': '002850', 'farm_name': '', 'first_name': 'Chelsea', 'last_name': 'Moss', 'address_line1': '13491 Fountain View Blvd.', 'address_line2': '', 'city': 'Wellington', 'state_code': 'FL', 'zip_code': '33414', 'country_name': 'USA', 'phone': '609-744-3964', 'email': '', 'is_active': True}, Percentage: 100.0
2025-05-19 19:17:47,880 - INFO - owner_controller.py:237 - Master Owner 'Chelsea Moss' (ID: 3) created by ADMIN.
2025-05-19 19:17:47,881 - INFO - owners_tab.py:342 - Newly created owner ID 3, now linking to horse ID 3
2025-05-19 19:17:47,885 - INFO - horse_controller.py:621 - Added owner ID 3 to horse ID 3 with 100.00% ownership by ADMIN.
2025-05-19 19:17:47,885 - INFO - base_view.py:293 - Displaying Info: Owner Linked - Owner added to horse successfully.
2025-05-19 19:17:51,671 - INFO - owners_tab.py:300 - Initiating Create & Link Owner for horse: Lorena 90
2025-05-19 19:36:58,507 - INFO - owners_tab.py:327 - Dialog accepted. Owner details: {'account_number': '000059', 'farm_name': 'Pegasus Farm', 'first_name': 'Dr. Edwin', 'last_name': 'Wilson', 'address_line1': '6 Woodfield Ct.', 'address_line2': '', 'city': 'Medford', 'state_code': 'NJ', 'zip_code': '08055', 'country_name': 'USA', 'phone': '', 'email': '', 'is_active': True}, Percentage: 100.0
2025-05-19 19:36:58,513 - INFO - owner_controller.py:237 - Master Owner 'Pegasus Farm (Dr. Edwin Wilson)' (ID: 4) created by ADMIN.
2025-05-19 19:36:58,513 - INFO - owners_tab.py:342 - Newly created owner ID 4, now linking to horse ID 3
2025-05-19 19:36:58,515 - ERROR - base_view.py:285 - Displaying Error: Failed to Link Owner - Adding 100.00% would exceed 100% total ownership (current total: 100.00%).
2025-05-19 19:37:02,954 - INFO - owners_tab.py:300 - Initiating Create & Link Owner for horse: Lorena 90
2025-05-19 19:42:05,231 - INFO - owners_tab.py:384 - Create and link owner dialog cancelled by user (dialog result was not 'Accepted').
2025-05-19 19:42:08,990 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 19:42:08,991 - INFO - main.py:210 - User 'ADMIN' logging out from Horse Management.
2025-05-19 19:42:09,001 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 19:42:09,010 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 19:44:00,012 - INFO - main.py:118 - Logging configured.
2025-05-19 19:44:00,013 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 19:44:00,013 - INFO - main.py:121 - Initializing database...
2025-05-19 19:44:00,013 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 19:44:00,027 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 19:44:00,031 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 19:44:00,034 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 19:44:00,034 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 19:44:00,035 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 19:44:00,035 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 19:44:00,040 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 19:44:00,070 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 19:44:02,149 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 19:44:10,751 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 19:44:10,751 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 19:44:10,752 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 19:44:10,752 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 19:44:10,767 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 19:44:11,941 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 19:44:11,951 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 19:44:11,951 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 19:44:11,975 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 19:44:12,030 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 19:44:17,942 - INFO - horse_unified_management.py:803 - Horse selected: ID 3
2025-05-19 19:44:17,942 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 3
2025-05-19 19:44:41,096 - INFO - owners_tab.py:300 - Initiating Create & Link Owner for horse: Lorena 90
2025-05-19 19:47:53,635 - INFO - owners_tab.py:327 - Dialog accepted. Owner details: {'account_number': '000059', 'farm_name': 'Pegasus Farm', 'first_name': 'Dr. Edwin', 'last_name': 'Wilson', 'address_line1': '6 Woodfield Ct.', 'address_line2': '', 'city': 'Medford', 'state_code': 'NJ', 'zip_code': '08055', 'country_name': 'USA', 'phone': '', 'email': '', 'is_active': True}, Percentage: 0.0
2025-05-19 19:47:53,641 - INFO - owner_controller.py:237 - Master Owner 'Pegasus Farm (Dr. Edwin Wilson)' (ID: 4) created by TM.
2025-05-19 19:47:53,641 - INFO - owners_tab.py:342 - Newly created owner ID 4, now linking to horse ID 3
2025-05-19 19:47:53,647 - INFO - horse_controller.py:621 - Added owner ID 4 to horse ID 3 with 0.00% ownership by TM.
2025-05-19 19:47:53,648 - INFO - base_view.py:293 - Displaying Info: Owner Linked - Owner added to horse successfully.
2025-05-19 19:48:09,582 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 19:48:09,582 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 19:48:11,085 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 19:48:11,085 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 19:48:14,071 - INFO - owners_tab.py:265 - Horse-owner association selected: Owner ID 1
2025-05-19 19:48:19,140 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 19:48:19,151 - INFO - user_management_screen.py:501 - UserManagementScreen __init__ started by user: TM
2025-05-19 19:48:19,197 - INFO - user_management_screen.py:1091 - Loading users data...
2025-05-19 19:48:19,198 - INFO - user_management_screen.py:1108 - Loaded 2 users.
2025-05-19 19:48:19,199 - INFO - user_management_screen.py:1202 - User selected: ADMIN
2025-05-19 19:48:19,200 - INFO - user_management_screen.py:1118 - Loading master owners data...
2025-05-19 19:48:19,201 - INFO - user_management_screen.py:1152 - Loaded 4 master owners.
2025-05-19 19:48:19,201 - INFO - user_management_screen.py:1225 - Master owner selected: ID 2
2025-05-19 19:48:19,204 - INFO - user_management_screen.py:1163 - Loading charge codes data...
2025-05-19 19:48:19,205 - INFO - user_management_screen.py:1192 - Loaded 7 charge codes.
2025-05-19 19:48:19,206 - INFO - user_management_screen.py:531 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 19:48:19,222 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 19:48:23,345 - INFO - user_management_screen.py:1225 - Master owner selected: ID 3
2025-05-19 19:48:24,564 - INFO - user_management_screen.py:1225 - Master owner selected: ID 1
2025-05-19 19:48:25,459 - INFO - user_management_screen.py:1225 - Master owner selected: ID 4
2025-05-19 19:48:47,790 - INFO - user_management_screen.py:1364 - User Management exit.
2025-05-19 19:48:47,791 - INFO - main.py:217 - User 'TM' logging out from Admin Screen.
2025-05-19 19:48:47,792 - INFO - user_management_screen.py:1724 - User Management screen closing.
2025-05-19 19:48:47,802 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 19:48:47,805 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 19:48:50,129 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 19:48:58,986 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 19:48:58,986 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 19:48:58,987 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 19:48:58,987 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 19:48:59,001 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 19:48:59,067 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 19:48:59,071 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 19:48:59,071 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 19:48:59,074 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 19:48:59,094 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 19:56:35,987 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 19:56:35,987 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 19:56:36,013 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 19:56:36,017 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 19:56:46,385 - INFO - main.py:118 - Logging configured.
2025-05-19 19:56:46,385 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 19:56:46,385 - INFO - main.py:121 - Initializing database...
2025-05-19 19:56:46,386 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 19:56:46,393 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 19:56:46,394 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 19:56:46,396 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 19:56:46,396 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 19:56:46,397 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 19:56:46,398 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 19:56:46,402 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 19:56:46,428 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 19:56:48,981 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 19:56:57,659 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 19:56:57,660 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 19:56:57,660 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 19:56:57,661 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 19:56:57,676 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 19:56:57,907 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 19:56:57,917 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 19:56:57,918 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 19:56:57,928 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 19:56:57,989 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 19:57:06,808 - INFO - horse_unified_management.py:803 - Horse selected: ID 3
2025-05-19 19:57:06,809 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 3
2025-05-19 19:57:30,942 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-19 19:57:30,942 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-19 19:57:34,224 - INFO - owners_tab.py:265 - Horse-owner association selected: Owner ID 2
2025-05-19 19:57:43,480 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 19:57:43,491 - INFO - user_management_screen.py:480 - UserManagementScreen __init__ started by user: TM
2025-05-19 19:57:43,537 - INFO - user_management_screen.py:978 - Loading users data...
2025-05-19 19:57:43,538 - INFO - user_management_screen.py:995 - Loaded 2 users.
2025-05-19 19:57:43,539 - INFO - user_management_screen.py:1101 - User selected: ADMIN
2025-05-19 19:57:43,540 - INFO - user_management_screen.py:1005 - Loading master owners data...
2025-05-19 19:57:43,541 - INFO - user_management_screen.py:1041 - Loaded 4 master owners.
2025-05-19 19:57:43,541 - INFO - user_management_screen.py:1124 - Master owner selected: ID 2
2025-05-19 19:57:43,545 - INFO - user_management_screen.py:1052 - Loading charge codes data...
2025-05-19 19:57:43,546 - INFO - user_management_screen.py:1091 - Loaded 7 charge codes.
2025-05-19 19:57:43,547 - INFO - user_management_screen.py:501 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 19:57:43,565 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 19:57:58,900 - INFO - user_management_screen.py:1624 - User Management screen closing.
2025-05-19 19:57:58,912 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 19:57:58,984 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 19:57:58,988 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 19:57:58,988 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 19:57:58,991 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 19:57:59,007 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 20:00:20,312 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-19 20:00:20,312 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-19 20:00:20,323 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 20:00:20,325 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 20:01:17,107 - INFO - main.py:118 - Logging configured.
2025-05-19 20:01:17,107 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 20:01:17,108 - INFO - main.py:121 - Initializing database...
2025-05-19 20:01:17,108 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 20:01:17,116 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 20:01:17,117 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 20:01:17,120 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 20:01:17,120 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 20:01:17,121 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 20:01:17,121 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 20:01:17,125 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 20:01:17,152 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 20:01:20,957 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 20:01:40,524 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 20:01:40,524 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 20:01:40,525 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 20:01:40,526 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 20:01:40,539 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 20:01:40,755 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 20:01:40,764 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 20:01:40,765 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 20:01:40,775 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 20:01:40,829 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 20:01:49,215 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 20:01:49,225 - INFO - user_management_screen.py:480 - UserManagementScreen __init__ started by user: TM
2025-05-19 20:01:49,268 - INFO - user_management_screen.py:978 - Loading users data...
2025-05-19 20:01:49,269 - INFO - user_management_screen.py:995 - Loaded 2 users.
2025-05-19 20:01:49,269 - INFO - user_management_screen.py:1101 - User selected: ADMIN
2025-05-19 20:01:49,270 - INFO - user_management_screen.py:1005 - Loading master owners data...
2025-05-19 20:01:49,271 - INFO - user_management_screen.py:1041 - Loaded 4 master owners.
2025-05-19 20:01:49,272 - INFO - user_management_screen.py:1124 - Master owner selected: ID 2
2025-05-19 20:01:49,275 - INFO - user_management_screen.py:1052 - Loading charge codes data...
2025-05-19 20:01:49,276 - INFO - user_management_screen.py:1091 - Loaded 7 charge codes.
2025-05-19 20:01:49,276 - INFO - user_management_screen.py:501 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 20:01:49,293 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 20:11:01,281 - INFO - user_management_screen.py:1624 - User Management screen closing.
2025-05-19 20:11:01,293 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 20:11:01,378 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 20:11:01,381 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 20:11:01,382 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 20:11:01,385 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 20:11:01,399 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 20:17:59,371 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 20:17:59,382 - INFO - user_management_screen.py:480 - UserManagementScreen __init__ started by user: TM
2025-05-19 20:17:59,436 - INFO - user_management_screen.py:978 - Loading users data...
2025-05-19 20:17:59,437 - INFO - user_management_screen.py:995 - Loaded 2 users.
2025-05-19 20:17:59,437 - INFO - user_management_screen.py:1101 - User selected: ADMIN
2025-05-19 20:17:59,438 - INFO - user_management_screen.py:1005 - Loading master owners data...
2025-05-19 20:17:59,439 - INFO - user_management_screen.py:1041 - Loaded 4 master owners.
2025-05-19 20:17:59,439 - INFO - user_management_screen.py:1124 - Master owner selected: ID 2
2025-05-19 20:17:59,441 - INFO - user_management_screen.py:1052 - Loading charge codes data...
2025-05-19 20:17:59,442 - INFO - user_management_screen.py:1091 - Loaded 7 charge codes.
2025-05-19 20:17:59,442 - INFO - user_management_screen.py:501 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 20:17:59,463 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 20:33:38,135 - INFO - user_management_screen.py:1263 - User Management exit.
2025-05-19 20:33:38,136 - INFO - main.py:217 - User 'TM' logging out from Admin Screen.
2025-05-19 20:33:38,137 - INFO - user_management_screen.py:1624 - User Management screen closing.
2025-05-19 20:33:38,148 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 20:33:38,151 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 22:03:44,802 - INFO - main.py:118 - Logging configured.
2025-05-19 22:03:44,802 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-19 22:03:44,803 - INFO - main.py:121 - Initializing database...
2025-05-19 22:03:44,803 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-19 22:03:44,810 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-19 22:03:44,811 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 22:03:44,813 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-19 22:03:44,813 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-19 22:03:44,814 - INFO - main.py:130 - Database initialized successfully.
2025-05-19 22:03:44,814 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-19 22:03:44,819 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-19 22:03:44,845 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-19 22:03:49,185 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-19 22:03:58,238 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-19 22:03:58,238 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-19 22:03:58,239 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-19 22:03:58,239 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-19 22:03:58,257 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-19 22:03:58,469 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-19 22:03:58,478 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-19 22:03:58,478 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-19 22:03:58,489 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-19 22:03:58,548 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-19 22:04:02,085 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-19 22:04:02,096 - INFO - user_management_screen.py:475 - UserManagementScreen __init__ started by user: TM
2025-05-19 22:04:02,148 - INFO - user_management_screen.py:1042 - Loading users data...
2025-05-19 22:04:02,149 - INFO - user_management_screen.py:1059 - Loaded 2 users.
2025-05-19 22:04:02,150 - INFO - user_management_screen.py:1189 - User selected: ADMIN
2025-05-19 22:04:02,151 - INFO - user_management_screen.py:1069 - Loading master owners data...
2025-05-19 22:04:02,152 - INFO - user_management_screen.py:1103 - Loaded 4 master owners.
2025-05-19 22:04:02,152 - INFO - user_management_screen.py:1212 - Master owner selected: ID 2
2025-05-19 22:04:02,156 - INFO - user_management_screen.py:1116 - Loading charge codes data...
2025-05-19 22:04:02,157 - INFO - user_management_screen.py:1152 - Loaded 7 charge codes.
2025-05-19 22:04:02,157 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-19 22:04:02,158 - INFO - user_management_screen.py:1179 - Loaded 0 locations.
2025-05-19 22:04:02,158 - INFO - user_management_screen.py:504 - UserManagementScreen initialized with Tabbed Interface.
2025-05-19 22:04:02,175 - INFO - main.py:207 - User Management Screen displayed.
2025-05-19 22:04:10,772 - INFO - user_management_screen.py:1738 - Add Location button clicked.
2025-05-20 09:40:01,510 - INFO - user_management_screen.py:1827 - User Management screen closing.
2025-05-20 09:40:01,524 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-20 09:40:01,609 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-20 09:40:01,613 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-20 09:40:01,613 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-20 09:40:01,616 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-20 09:40:01,672 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-20 11:20:01,146 - INFO - main.py:118 - Logging configured.
2025-05-20 11:20:01,146 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-20 11:20:01,146 - INFO - main.py:121 - Initializing database...
2025-05-20 11:20:01,146 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-20 11:20:01,162 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-20 11:20:01,162 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-20 11:20:01,164 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-20 11:20:01,165 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-20 11:20:01,165 - INFO - main.py:130 - Database initialized successfully.
2025-05-20 11:20:01,165 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-20 11:20:01,176 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-20 11:20:01,203 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-20 11:20:12,215 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-20 11:20:21,077 - INFO - user_controller.py:81 - Password validated successfully for active user 'TM'.
2025-05-20 11:20:21,077 - INFO - small_login_dialog.py:188 - Password validation successful for user 'TM'.
2025-05-20 11:20:21,078 - INFO - small_login_dialog.py:192 - User 'TM' logged in successfully via small dialog.
2025-05-20 11:20:21,078 - INFO - main.py:160 - User 'TM' logged in successfully.
2025-05-20 11:20:21,092 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-20 11:20:21,248 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-20 11:20:21,258 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-20 11:20:21,258 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-20 11:20:21,282 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-20 11:20:21,339 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-20 11:20:25,217 - INFO - horse_unified_management.py:803 - Horse selected: ID 3
2025-05-20 11:20:25,218 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 3
2025-05-20 11:20:26,144 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-20 11:20:26,144 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-20 11:20:29,761 - INFO - horse_unified_management.py:803 - Horse selected: ID 3
2025-05-20 11:20:29,761 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 3
2025-05-20 11:20:30,896 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-20 11:20:30,896 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-20 11:20:35,520 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-20 11:20:35,530 - INFO - user_management_screen.py:475 - UserManagementScreen __init__ started by user: TM
2025-05-20 11:20:35,576 - INFO - user_management_screen.py:1042 - Loading users data...
2025-05-20 11:20:35,577 - INFO - user_management_screen.py:1059 - Loaded 2 users.
2025-05-20 11:20:35,578 - INFO - user_management_screen.py:1189 - User selected: ADMIN
2025-05-20 11:20:35,578 - INFO - user_management_screen.py:1069 - Loading master owners data...
2025-05-20 11:20:35,579 - INFO - user_management_screen.py:1103 - Loaded 4 master owners.
2025-05-20 11:20:35,580 - INFO - user_management_screen.py:1212 - Master owner selected: ID 2
2025-05-20 11:20:35,583 - INFO - user_management_screen.py:1116 - Loading charge codes data...
2025-05-20 11:20:35,584 - INFO - user_management_screen.py:1152 - Loaded 7 charge codes.
2025-05-20 11:20:35,585 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 11:20:35,585 - INFO - user_management_screen.py:1179 - Loaded 0 locations.
2025-05-20 11:20:35,585 - INFO - user_management_screen.py:504 - UserManagementScreen initialized with Tabbed Interface.
2025-05-20 11:20:35,603 - INFO - main.py:207 - User Management Screen displayed.
2025-05-20 11:20:46,028 - INFO - user_management_screen.py:1738 - Add Location button clicked.
2025-05-20 11:21:33,253 - INFO - location_controller.py:104 - Location 'AAron Lampert' (ID: 1) created by TM.
2025-05-20 11:21:33,253 - INFO - base_view.py:293 - Displaying Info: Success - Location created successfully.
2025-05-20 11:21:36,113 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 11:21:36,114 - INFO - user_management_screen.py:1179 - Loaded 1 locations.
2025-05-20 11:21:42,522 - INFO - user_management_screen.py:1738 - Add Location button clicked.
2025-05-20 11:21:55,035 - INFO - location_controller.py:104 - Location 'ACL Farms' (ID: 2) created by TM.
2025-05-20 11:21:55,035 - INFO - base_view.py:293 - Displaying Info: Success - Location created successfully.
2025-05-20 11:21:55,925 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 11:21:55,926 - INFO - user_management_screen.py:1179 - Loaded 2 locations.
2025-05-20 11:22:02,096 - INFO - user_management_screen.py:1738 - Add Location button clicked.
2025-05-20 11:22:15,539 - INFO - location_controller.py:104 - Location 'Allen's Farm' (ID: 3) created by TM.
2025-05-20 11:22:15,540 - INFO - base_view.py:293 - Displaying Info: Success - Location created successfully.
2025-05-20 11:22:16,063 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 11:22:16,064 - INFO - user_management_screen.py:1179 - Loaded 3 locations.
2025-05-20 11:22:21,279 - INFO - user_management_screen.py:1738 - Add Location button clicked.
2025-05-20 11:22:38,262 - INFO - location_controller.py:104 - Location 'Alpine Farm' (ID: 4) created by TM.
2025-05-20 11:22:38,263 - INFO - base_view.py:293 - Displaying Info: Success - Location created successfully.
2025-05-20 11:22:39,674 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 11:22:39,676 - INFO - user_management_screen.py:1179 - Loaded 4 locations.
2025-05-20 11:22:43,032 - INFO - user_management_screen.py:1738 - Add Location button clicked.
2025-05-20 11:22:56,319 - INFO - location_controller.py:104 - Location 'Amy Freeman' (ID: 5) created by TM.
2025-05-20 11:22:56,319 - INFO - base_view.py:293 - Displaying Info: Success - Location created successfully.
2025-05-20 11:23:06,733 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 11:23:06,733 - INFO - user_management_screen.py:1179 - Loaded 5 locations.
2025-05-20 11:23:08,306 - INFO - user_management_screen.py:1738 - Add Location button clicked.
2025-05-20 11:23:24,604 - INFO - location_controller.py:104 - Location 'Amy Keating' (ID: 6) created by TM.
2025-05-20 11:23:24,605 - INFO - base_view.py:293 - Displaying Info: Success - Location created successfully.
2025-05-20 11:23:25,153 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 11:23:25,153 - INFO - user_management_screen.py:1179 - Loaded 6 locations.
2025-05-20 11:23:27,147 - INFO - user_management_screen.py:1738 - Add Location button clicked.
2025-05-20 11:23:45,760 - INFO - location_controller.py:104 - Location 'Anthony Ventriglio' (ID: 7) created by TM.
2025-05-20 11:23:45,760 - INFO - base_view.py:293 - Displaying Info: Success - Location created successfully.
2025-05-20 11:23:47,360 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 11:23:47,361 - INFO - user_management_screen.py:1179 - Loaded 7 locations.
2025-05-20 11:23:50,843 - INFO - user_management_screen.py:1827 - User Management screen closing.
2025-05-20 11:23:50,854 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-20 11:23:50,924 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-20 11:23:50,928 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-20 11:23:50,928 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-20 11:23:50,931 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-20 11:23:50,949 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-20 11:26:51,607 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-20 11:26:51,617 - INFO - user_management_screen.py:475 - UserManagementScreen __init__ started by user: TM
2025-05-20 11:26:51,674 - INFO - user_management_screen.py:1042 - Loading users data...
2025-05-20 11:26:51,674 - INFO - user_management_screen.py:1059 - Loaded 2 users.
2025-05-20 11:26:51,675 - INFO - user_management_screen.py:1189 - User selected: ADMIN
2025-05-20 11:26:51,676 - INFO - user_management_screen.py:1069 - Loading master owners data...
2025-05-20 11:26:51,676 - INFO - user_management_screen.py:1103 - Loaded 4 master owners.
2025-05-20 11:26:51,677 - INFO - user_management_screen.py:1212 - Master owner selected: ID 2
2025-05-20 11:26:51,679 - INFO - user_management_screen.py:1116 - Loading charge codes data...
2025-05-20 11:26:51,679 - INFO - user_management_screen.py:1152 - Loaded 7 charge codes.
2025-05-20 11:26:51,680 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 11:26:51,680 - INFO - user_management_screen.py:1179 - Loaded 7 locations.
2025-05-20 11:26:51,680 - INFO - user_management_screen.py:504 - UserManagementScreen initialized with Tabbed Interface.
2025-05-20 11:26:51,698 - INFO - main.py:207 - User Management Screen displayed.
2025-05-20 11:27:04,847 - INFO - user_management_screen.py:1827 - User Management screen closing.
2025-05-20 11:27:04,858 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: TM
2025-05-20 11:27:04,943 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-20 11:27:04,947 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-20 11:27:04,948 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-20 11:27:04,950 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-20 11:27:04,969 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-20 12:21:50,906 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-20 12:21:50,906 - INFO - main.py:210 - User 'TM' logging out from Horse Management.
2025-05-20 12:21:50,917 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-20 12:21:50,920 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-20 13:09:12,977 - INFO - main.py:118 - Logging configured.
2025-05-20 13:09:12,977 - INFO - main.py:69 - Starting EDSI Veterinary Management System v1.3.1
2025-05-20 13:09:12,978 - INFO - main.py:121 - Initializing database...
2025-05-20 13:09:12,978 - INFO - database_config.py:79 - Initializing database with URL: sqlite:///C:\Projects\EDMS\edsi_database.db
2025-05-20 13:09:12,985 - INFO - database_config.py:85 - Database engine and session factory created successfully.
2025-05-20 13:09:12,986 - INFO - database_config.py:149 - Models known by Base.metadata before create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-20 13:09:12,988 - INFO - database_config.py:154 - Database tables created (if they didn't exist).
2025-05-20 13:09:12,988 - INFO - database_config.py:156 - Models known by Base.metadata after create_all: ['roles', 'user_roles', 'users', 'system_config', 'species', 'state_provinces', 'charge_codes', 'veterinarians', 'locations', 'transactions', 'transaction_details', 'invoices', 'procedures', 'drugs', 'treatment_logs', 'communication_logs', 'documents', 'reminders', 'appointments', 'horses', 'horse_owners', 'horse_locations', 'horse_billing', 'owners', 'owner_billing_history', 'owner_payments']
2025-05-20 13:09:12,989 - INFO - main.py:130 - Database initialized successfully.
2025-05-20 13:09:12,989 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-20 13:09:12,994 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
2025-05-20 13:09:13,022 - INFO - main.py:238 - EDSI Veterinary Management System event loop started.
2025-05-20 13:09:15,618 - INFO - main.py:148 - Login area clicked on splash screen.
2025-05-20 13:09:26,138 - INFO - user_controller.py:81 - Password validated successfully for active user 'ADMIN'.
2025-05-20 13:09:26,138 - INFO - small_login_dialog.py:188 - Password validation successful for user 'ADMIN'.
2025-05-20 13:09:26,139 - INFO - small_login_dialog.py:192 - User 'ADMIN' logged in successfully via small dialog.
2025-05-20 13:09:26,139 - INFO - main.py:160 - User 'ADMIN' logged in successfully.
2025-05-20 13:09:26,154 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-20 13:09:26,358 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-20 13:09:26,364 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-20 13:09:26,425 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-20 13:09:31,039 - INFO - horse_unified_management.py:1085 - Setup icon clicked, emitting setup_requested signal.
2025-05-20 13:09:31,051 - INFO - user_management_screen.py:475 - UserManagementScreen __init__ started by user: ADMIN
2025-05-20 13:09:31,062 - ERROR - owner_controller.py:398 - Error fetching owner form reference data: type object 'StateProvince' has no attribute 'is_active'
Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\owner_controller.py", line 390, in get_owner_form_reference_data
    .filter(StateProvince.is_active == True)
            ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'StateProvince' has no attribute 'is_active'
2025-05-20 13:09:31,104 - INFO - user_management_screen.py:1042 - Loading users data...
2025-05-20 13:09:31,105 - INFO - user_management_screen.py:1059 - Loaded 1 users.
2025-05-20 13:09:31,105 - INFO - user_management_screen.py:1189 - User selected: ADMIN
2025-05-20 13:09:31,106 - INFO - user_management_screen.py:1069 - Loading master owners data...
2025-05-20 13:09:31,108 - INFO - user_management_screen.py:1076 - No master owners found.
2025-05-20 13:09:31,108 - INFO - user_management_screen.py:1116 - Loading charge codes data...
2025-05-20 13:09:31,110 - INFO - user_management_screen.py:1152 - Loaded 4 charge codes.
2025-05-20 13:09:31,110 - INFO - user_management_screen.py:1159 - Loading locations data...
2025-05-20 13:09:31,111 - INFO - user_management_screen.py:1179 - Loaded 0 locations.
2025-05-20 13:09:31,111 - INFO - user_management_screen.py:504 - UserManagementScreen initialized with Tabbed Interface.
2025-05-20 13:09:31,129 - INFO - main.py:207 - User Management Screen displayed.
2025-05-20 13:09:49,424 - INFO - user_management_screen.py:1827 - User Management screen closing.
2025-05-20 13:09:49,437 - INFO - horse_unified_management.py:96 - HorseUnifiedManagement __init__ started for user: ADMIN
2025-05-20 13:09:49,506 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-20 13:09:49,508 - INFO - horse_unified_management.py:115 - HorseUnifiedManagement screen __init__ finished.
2025-05-20 13:09:49,530 - INFO - main.py:186 - Horse Management Screen displayed.
2025-05-20 13:09:53,473 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-20 13:10:45,763 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-20 13:10:45,763 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-20 13:10:45,771 - INFO - horse_controller.py:121 - Created new horse: Soul Rebel (ID: 1)
2025-05-20 13:10:45,771 - INFO - horse_unified_management.py:637 - New horse created with ID: 1
2025-05-20 13:10:45,771 - INFO - base_view.py:293 - Displaying Info: Success - Horse created successfully
2025-05-20 13:10:47,461 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-20 13:10:47,466 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-20 13:10:47,466 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-20 13:10:52,894 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-20 13:11:12,448 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-20 13:11:12,449 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-20 13:11:12,454 - INFO - horse_controller.py:121 - Created new horse: Donatello (ID: 2)
2025-05-20 13:11:12,454 - INFO - horse_unified_management.py:637 - New horse created with ID: 2
2025-05-20 13:11:12,455 - INFO - base_view.py:293 - Displaying Info: Success - Horse created successfully
2025-05-20 13:11:13,940 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-20 13:11:13,944 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-20 13:11:13,944 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-20 13:11:16,732 - INFO - horse_unified_management.py:819 - Initiating add new horse.
2025-05-20 13:11:33,238 - INFO - horse_unified_management.py:599 - Attempting to save changes from tab. New horse: True
2025-05-20 13:11:33,238 - INFO - horse_unified_management.py:627 - Creating new horse.
2025-05-20 13:11:33,244 - INFO - horse_controller.py:121 - Created new horse: Lorena 90 (ID: 3)
2025-05-20 13:11:33,244 - INFO - horse_unified_management.py:637 - New horse created with ID: 3
2025-05-20 13:11:33,244 - INFO - base_view.py:293 - Displaying Info: Success - Horse created successfully
2025-05-20 13:11:34,717 - INFO - horse_unified_management.py:713 - Loading horses (Status: active, Search: '')
2025-05-20 13:11:34,717 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-20 13:11:34,718 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-20 13:11:34,720 - INFO - horse_unified_management.py:806 - Horse selection cleared.
2025-05-20 13:11:34,725 - INFO - horse_unified_management.py:803 - Horse selected: ID 2
2025-05-20 13:11:34,725 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 2
2025-05-20 13:11:34,727 - INFO - horse_unified_management.py:803 - Horse selected: ID 3
2025-05-20 13:11:34,727 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 3
2025-05-20 13:11:37,265 - INFO - horse_unified_management.py:803 - Horse selected: ID 1
2025-05-20 13:11:37,265 - INFO - horse_unified_management.py:911 - Loading details for horse ID: 1
2025-05-20 13:13:11,457 - INFO - owners_tab.py:300 - Initiating Create & Link Owner for horse: Soul Rebel
2025-05-20 13:13:11,465 - ERROR - owner_controller.py:398 - Error fetching owner form reference data: type object 'StateProvince' has no attribute 'is_active'
Traceback (most recent call last):
  File "C:\Projects\EDMS\controllers\owner_controller.py", line 390, in get_owner_form_reference_data
    .filter(StateProvince.is_active == True)
            ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'StateProvince' has no attribute 'is_active'
2025-05-20 13:14:25,166 - INFO - owners_tab.py:384 - Create and link owner dialog cancelled by user (dialog result was not 'Accepted').
2025-05-20 13:14:28,311 - INFO - horse_unified_management.py:1089 - Log Out action triggered from user menu.
2025-05-20 13:14:28,312 - INFO - main.py:210 - User 'ADMIN' logging out from Horse Management.
2025-05-20 13:14:28,324 - INFO - splash_screen.py:73 - Attempting to load splash image from: C:\Projects\EDMS\assets\splash_screen.jpg
2025-05-20 13:14:28,326 - INFO - splash_screen.py:138 - Splash screen UI setup complete.
